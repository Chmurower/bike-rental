@page "/bicyclesforrent/{id:int}"

@using bike_rental.frontend.test.Models

@inject HttpClient http

<h3>BikeRent</h3>

<form>
    <fieldset disabled>
        <legend>xxxx</legend>
        <div class="mb-3">
            <label for="disabledTextInput" class="form-label">@category.Type</label>
            <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input">
        </div>
        <div class="mb-3">
            <label for="disabledTextInput" class="form-label">@bicycle.ModelName</label>
            <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input">
        </div>
        <div class="mb-3">
            <label for="disabledTextInput" class="form-label">@framesize.Size</label>
            <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input">
        </div>
    </fieldset>
</form>


@if (bicycle.Reservations == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Start reservation</th>
                <th>End reservation</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reservation in bicycle.Reservations)
            {
                <tr>
                    <td>@reservation.StartReservation</td>
                    <td>@reservation.EndReservation</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int Id { get; set; } // bicycle primary key

    Bicycle bicycle = new();
    Category category = new();
    FrameSize framesize = new();

    protected override async Task OnInitializedAsync()
    {
        bicycle = await http.GetFromJsonAsync<Bicycle>("https://localhost:7052/api/bike/" + Id);
        category = await http.GetFromJsonAsync<Category>("https://localhost:7052/api/category/" + bicycle.CategoryId);
        framesize = await http.GetFromJsonAsync<FrameSize>("https://localhost:7052/api/category/" + bicycle.FrameSizeId);
    }

}
