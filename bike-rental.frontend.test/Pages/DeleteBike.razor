@page "/deletebicycle"

@using bike_rental.frontend.test.Models;
@using Microsoft.Extensions.Options;
@using bike_rental.frontend.test.Services;

@inject HttpClient http;
@inject NavigationManager Navigation
@inject IOptions<ApiSettings> _apiOptions;

<PageTitle>Bike scrap</PageTitle>

<h1>Scrapping bicycles</h1>

@if (bicycles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Category</th>
                <th>Model</th>
                <th>Frame size</th>
                <th>Serian number</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bicycle in bicycles)
            {
                <tr>
                    <td>@bicycle.Category.Type</td>
                    <td>@bicycle.ModelName</td>
                    <td>@bicycle.FrameSize.Size</td>
                    <td>@bicycle.SerialNumber</td>
                    <td><button class="btn btn-danger" @onclick="@(() => DeleteThisBike(bicycle.Id))">Scrapp bike</button></td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    List<Bicycle> bicycles;

    private async Task DeleteThisBike(int id)
    {
        var deleteResponse = await http.DeleteAsync(_apiOptions.Value.Url + "api/bike/remove/" + id);

        if (deleteResponse.IsSuccessStatusCode == true)
        {
            Navigation.NavigateTo("/service", true);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        bicycles = await http.GetFromJsonAsync<List<Bicycle>>(_apiOptions.Value.Url + "api/service");
    }
}
