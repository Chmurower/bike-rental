@page "/service"
@using bike_rental.frontend.test.Models

@inject HttpClient http

<PageTitle>Bicycles service room</PageTitle>

<h1>Bicycles waiting for service</h1>

@if (bicycles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Model</th>
                <th>Serial number</th>
                <th>Frame size id</th>
                <th>Service day</th>
                <th>Service performed</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bicycle in bicycles)
            {
                <tr>
                    <td>@bicycle.ModelName</td>
                    <td>@bicycle.SerialNumber</td>
                    <td>@bicycle.FrameSizeId</td>
                    <td>@bicycle.StartService</td>
                    <td><button class="btn btn-green"  @onclick="@(() => BicycleServisedAndReadyForRent(bicycle.id))">Servised</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Bicycle> bicycles;

    void BicycleServisedAndReadyForRent(int bicycleId){
        // ToDo : change status of bike and add new date for service
        var response = await http.GetJsonAsync<bool>("https://localhost:7052/api/service/done/" + orderNb);
        // ToDo : refresh this page
        if (response == true){
            OnInitializedAsync();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        bicycles = await http.GetFromJsonAsync<List<Bicycle>>("https://localhost:7052/api/service");
    }
}
